apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: "com.github.spotbugs"
// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'checkstyle', 'pmd'

def configDir = "${project.rootDir}/config/quality"
def reportsDir = "${project.buildDir}/reports"

spotbugs {
    toolVersion = '3.1.12'
}



//spotbugs{
//    ignoreFailures=true
//    htmlReport=true
//    reportsDir =
//}
//tasks.withType(com.github.spotbugs.SpotBugsTask) {
//    // configure automatically generated tasks
//    ignoreFailures= true  //有警告错误的时候也允许构建
//    effort= "default"  //分析级别  Minimal/default/Maximal
//    reportLevel= "low"  //报告级别 low/medium/high
//    classes = files("${project.rootDir}/app/build/intermediates/javac/debug/compileDebugJavaWithJavac")  //.classe文件夹地址
//    source= fileTree("src/main/java/")  //源代码文件地址
////    excludeFilter = new File("${project.rootDir}/findbugs-filter.xml")
//    classpath= files()
//    reports.xml.enabled = false
//    reports.html.enabled = true
//}
        /*{
            tasks.withType(com.github.spotbugs.SpotBugsTask) {
                // configure automatically generated tasks
                ignoreFailures= true  //有警告错误的时候也允许构建
                effort= "default"  //分析级别  Minimal/default/Maximal
                reportLevel= "low"  //报告级别 low/medium/high
                classes = files("${project.rootDir}/app/build/intermediates/javac/debug/compileDebugJavaWithJavac")  //.classe文件夹地址
                source= fileTree("src/main/java/")  //源代码文件地址
//    excludeFilter = new File("${project.rootDir}/findbugs-filter.xml")
                classpath= files()
                reports.xml.enabled = false
                reports.html.enabled = true
            }
        }*/
checkstyle {
    toolVersion = '8.20'
}
task checkstyle(type: Checkstyle) {
    //  配置文件路径
    configFile file("$configDir/checkstyle/checkstyle.xml")
    //  filter路径
    configProperties.checkstyleSuppressionsPath = file("$configDir/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
 /*       xml {
            destination "$reportsDir/checkstyle/checkstyle.xml"
        }
        html {
            destination "$reportsDir/checkstyle/checkstyle.html"
        }*/
    }
    classpath = files()

}



task pmd(type: Pmd) {
    ignoreFailures = true
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
/*        xml {
            destination "$reportsDir/pmd/pmd.xml"
        }
        html {
            destination "$reportsDir/pmd/pmd.html"
        }*/
    }
}

android {
    lintOptions {
        abortOnError false
        checkAllWarnings true
        xmlReport false
        htmlReport true
        //  配置lint.xml来指定要分析哪些方面的问题
        //  lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-result.html")
        xmlOutput file("$reportsDir/lint/lint-result.xml")
    }
}
